<?xml version="1.0" encoding="GB2312"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	  http://www.springframework.org/schema/tx
	  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	  http://www.springframework.org/schema/jee
	  http://www.springframework.org/schema/jee/spring-jee-3.0.xsd 
	  http://www.springframework.org/schema/context
	  http://www.springframework.org/schema/context/spring-context-3.0.xsd
	  http://www.springframework.org/schema/aop
	  http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<context:component-scan base-package="com.hp.idc" />
	<context:annotation-config />

	<!--配置文件读取-->
	<bean id="systemPropertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:system.properties</value>
		</property>
		<property name="ignoreUnresolvablePlaceholders">
			<value>true</value>
		</property>
	</bean>

	<!--连接池配置，使用c3p0-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${jdbc.url}</value>
		</property>
		<property name="user">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<property name="initialPoolSize">
			<value>${db.initPoolSize}</value>
		</property>
		<property name="minPoolSize">
			<value>${db.minPoolSize}</value>
		</property>
		<property name="maxPoolSize">
			<value>${db.maxPoolSize}</value>
		</property>
		<property name="maxIdleTime">
			<value>${db.maxIdleTime}</value>
		</property>
		<property name="acquireIncrement">
			<value>${db.poolIncrement}</value>
		</property>
	</bean>

	<!-- hibernate session factory configuration -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<!--
					cache configuration <prop
					key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
					<prop
					key="hibernate.cache.provider_configuration_file_resource_path">ehcache/ehcache-hibernate-local.xml</prop>
				-->
			</props>
		</property>
	</bean>

	<!-- JPA -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="${jpa.vendor_adapter}">
				<property name="database" value="${jpa.dialect}" />
				<property name="showSql" value="${jpa.show_sql}" />
			</bean>
		</property>
	</bean>

	<!-- Jpa事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />


	<!-- Enable @Configured support -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="idcTxPointCut"
			expression="execution(* com.hp.idc.*.service.*Service.*(..))
			and !execution(* com.hp.idc.resm.service..*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="idcTxPointCut" />
	</aop:config>


	<!-- 定义事务管理器（声明式的事务） -->


	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!--oracle数据库使用OracleLobHandler,其他使用DefaultLobHandler-->
	<bean id="defaultLobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler"
		lazy-init="true">
		<property name="nativeJdbcExtractor">
			<bean
				class="org.springframework.jdbc.support.nativejdbc.C3P0NativeJdbcExtractor" />
		</property>
	</bean>

	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<!--
		事务级别 PROPAGATION_REQUIRES_NEW 每次开始一个新事务 PROPAGATION_REQUIRED
		当前存在事务，使用当前事务，否则新开一个事务 readOnly 该事务只读
	-->

	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		<!-- 配置事务属性 -->
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<!-- 初始化日志配置 -->
	<bean id="log4jInitializer"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod">
			<value>org.springframework.util.Log4jConfigurer.initLogging</value>
		</property>
		<property name="arguments">
			<list>
				<value>classpath:log4j.xml</value>
				<value>2000</value>
			</list>
		</property>
	</bean>

	<bean class="com.hp.idc.common.CodePage" init-method="initCodePage" />

	<bean id="serviceScheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="schedulerName">
			<value>serviceScheduler</value>
		</property>
	</bean>
	<bean id="schedulerManager" class="com.hp.idc.common.SchedulerManager">
		<property name="scheduler">
			<ref bean="serviceScheduler" />
		</property>
	</bean>

	<bean id="common_upload" class="com.hp.idc.common.upload.Common"
		init-method="init">
		<property name="SAVE_PATH">
			<value>${upload.SAVE_PATH}</value>
		</property>
		<property name="TEMP_PATH">
			<value>${upload.TEMP_PATH}</value>
		</property>
		<property name="UPLOAD_CACHE">
			<value>${upload.UPLOAD_CACHE}</value>
		</property>
		<property name="FILE_MAX_SIZE">
			<value>${upload.FILE_MAX_SIZE}</value>
		</property>
	</bean>

	<bean class="com.hp.idc.common.upload.DBUtil">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		<property name="transactionTemplate" ref="transactionTemplate" />
		<property name="defaultLobHandler" ref="defaultLobHandler" />
	</bean>
</beans>
