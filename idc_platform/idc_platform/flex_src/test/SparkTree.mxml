<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
               xmlns:s="library://ns.adobe.com/flex/spark" 
               xmlns:mx="library://ns.adobe.com/flex/mx"
               initialize="initTree()" >
    <fx:Script>
    <![CDATA[
        private var treeDP:XMLLinearIList;
        private var openNodes:Array;

        private function initTree():void
        {
            openNodes = [];
            var nodeB:XMLList = treeXML.item.(@label == "Node B");
            openNodes.push(nodeB[0]);
            treeDP = new XMLLinearIList(treeXML, openNodes, "*");
            testTree1.dataProvider = treeDP;
        }
    ]]>
    </fx:Script>
    <fx:Declarations>
	<fx:XML id="treeXML" xmlns="">
		<rootNode>
			<item label="Node A" >
				<item label="Leaf A1" />
				<item label="Leaf A2" />
				<item label="Leaf A3" />
				<item label="Leaf A4" />
			</item>
			<item label="Node B" >
				<item label="Leaf B1" />
				<item label="Leaf B2" />
				<item label="Leaf B3" />
				<item label="Node D" >
					<item label="Leaf D1" />
					<item label="Leaf D2" />
					<item label="Leaf D3" />
					<item label="Node E" >
						<item label="Leaf E1" />
						<item label="Leaf E2" />
						<item label="Leaf E3" />
						<item label="Node F" >
							<item label="Leaf F1" />
							<item label="Leaf F2" />
							<item label="Leaf F3" />
						</item>						
					</item>
				</item>				
			</item>
			<item label="Node C" >
				<item label="Leaf C1" />
				<item label="Leaf C2" />
				<item label="Leaf C3" />
			</item>
			<item label="Node G" />
		</rootNode>
	</fx:XML>
    </fx:Declarations>
	
	<s:List id="testTree1" height="100%" width="100%"
		labelField="@label" >
        <s:itemRenderer>
            <fx:Component>
                <s:ItemRenderer dataChange="update()">
                    <fx:Script>
                        import spark.components.List;
                        private function update():void
                        {
                            disclosure.visible = XML(data).children().length() > 0;
                            disclosure.selected = XMLLinearIList(List(owner).dataProvider).openNodes.indexOf(XML(data)) != -1;
                            spacer.width = XMLLinearIList(List(owner).dataProvider).getDepth(XML(data)) * 8;
                        }
                    </fx:Script>
                    <s:layout>
                        <s:HorizontalLayout />
                    </s:layout>
                    <s:Group id="spacer" />
                    <s:ToggleButton id="disclosure" skinClass="test.DisclosureSkin"
                        click="disclosure.selected ? 
                                XMLLinearIList(List(owner).dataProvider).openNode(XML(data)) :
                                XMLLinearIList(List(owner).dataProvider).closeNode(XML(data))" />
                    <s:Label id="labelDisplay" />
                </s:ItemRenderer>
            </fx:Component>
        </s:itemRenderer>
    </s:List>

</s:Application>