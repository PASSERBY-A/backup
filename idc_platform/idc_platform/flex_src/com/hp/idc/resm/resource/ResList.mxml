<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="950" height="400"
			   xmlns:widgets="com.hp.idc.components.widgets.*"
			   creationComplete="init(event);" 
			   close="PopUpManager.removePopUp(this);" 
			   title="资源查询" >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<mx:RemoteObject  id="srv" destination="modelService">
			<mx:method  name="getModelTree" result="resultHandler(event)" fault="FaultHandler.defaultFaultHandler(event)"/>
		</mx:RemoteObject>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.hp.idc.components.HtRemoteObject;
			import com.hp.idc.components.PetAlert;
			import com.hp.idc.components.TreeItem;
			import com.hp.idc.resm.event.PageEvent;
			import com.hp.idc.resm.model.AttributeDefine;
			import com.hp.idc.resm.model.Model;
			import com.hp.idc.resm.ui.PageInfo;
			import com.hp.idc.resm.ui.PageQueryInfo;
			import com.hp.idc.ui.FaultHandler;
			import com.hp.idc.util.UserTool;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectUtil;
			
			private var keyword:String = null;
			public var modelId:String = null;
			public var p:ResourceObjectUpdate;
			
			private function resultHandler(event:ResultEvent):void
			{
				var returnString :String = event.result as String;	
				var treeDate : XML = new XML(returnString);   
				
				modelType.dataProvider = TreeItem.createDataProviderFromXML(treeDate);   
			}
			
			protected function resources_dbclickHandler(event:MouseEvent):void
			{
				var selectItem:ResourceObject = resources.selectedItem as ResourceObject;
				if(selectItem==null){
					Alert.show("请选择一个需要复制的资源");
					return;
				}
				p.initResourceData(selectItem);
				PopUpManager.removePopUp(this);
			}
			
			/**
			 * 搜索资源，按资源类型和关键字
			 */
			protected function button1_clickHandler(event:MouseEvent):void
			{
				if(modelType.selectedItem==null){
					PetAlert.show("请先选择模型类型！！！","提示信息",4,null,null,PetAlert.ICON_INFO);
					return;
				}
				keyword = keyinput.text;
				modelId = modelType.selectedItem.id;
				
				var remoteService:HtRemoteObject = new HtRemoteObject("modelService",null,false,true);
				remoteService.onFault = FaultHandler.defaultFaultHandler;
				remoteService.onResult = getHeaderHandler;
				remoteService.call("getModelById",modelId);
				
			}
			
			//根据选择资源对象类型动态创建显示列，并获取第一页信息
			private function getHeaderHandler(event:ResultEvent):void{
				var headers:ArrayCollection = (event.result as Model).header;
				
				var cols:ArrayCollection = new ArrayCollection();
				for(var i:int=0;headers!=null&&i<headers.length;i++){
					var attributeDefine:AttributeDefine = headers.getItemAt(i) as AttributeDefine;
					var gridColumn:GridColumn = new GridColumn();
					gridColumn.headerText = attributeDefine.name;
					gridColumn.dataField = attributeDefine.id;
					gridColumn.labelFunction = ResourceObject.getLabelFunction(attributeDefine.id);
					gridColumn.sortCompareFunction=function(obj1:Object, obj2:Object , col:GridColumn):int{
						var data1:String,data2:String;
						data1=col.labelFunction(obj1,col);
						data2=col.labelFunction(obj2,col);
						var regExp:RegExp=/^[\d\.]*$/;
						if(regExp.test(data1)&&regExp.test(data2)) {
							return ObjectUtil.numericCompare(Number(data1),Number(data2));
						}else {
							return ObjectUtil.stringCompare(data1,data2);
						}
						return 0;
					}
					
					gridColumn.sortable = true;
					if(attributeDefine.id == "id"){
						
					}
					
					cols.addItem(gridColumn);
				}
				resources.columns = cols;
				
				//查询第一页信息
				var query:PageQueryInfo = new PageQueryInfo();
				query.pageCount = 15;
				query.startPage = 1;
				query.sortBy = "";
				var pevent:PageEvent = new PageEvent(PageEvent.PAGECHANGE,query,null,true);
				dispatchEvent(pevent);
			}
			
			protected function init(event:Event):void
			{
				srv.getModelTree();
				//监听分页改变信息
				this.addEventListener(PageEvent.PAGECHANGE,getPageInfo);
				keyinput.addEventListener(FlexEvent.ENTER,keyInputEnter);
			}
			
			private function getPageInfo(event:PageEvent):void{
				var pagequeryinfo:PageQueryInfo = event.pageQueryInfo;
				var remoteService:HtRemoteObject = new HtRemoteObject("resourceService",null,false,true);
				remoteService.onFault = FaultHandler.defaultFaultHandler;
				remoteService.onResult = getPageInfoHandler;
				remoteService.call("listResource",modelId,true,keyword,pagequeryinfo,UserTool.userId);
			}
			
			private function getPageInfoHandler(event:ResultEvent):void{
				var pageinfo:PageInfo = event.result as PageInfo;
				pagecontroller.pageInfo = pageinfo;
			}
			
			protected function keyInputEnter(event:FlexEvent):void
			{
				if(modelType.selectedItem==null){
					PetAlert.show("请先选择模型类型！！！","提示信息",4,null,null,PetAlert.ICON_INFO);
					return;
				}
				keyword = keyinput.text;
				modelId = modelType.selectedItem.id;
				
				var remoteService:HtRemoteObject = new HtRemoteObject("modelService",null,false,true);
				remoteService.onFault = FaultHandler.defaultFaultHandler;
				remoteService.onResult = getHeaderHandler;
				remoteService.call("getModelById",modelId);
			}
			
		]]>
	</fx:Script>
	<s:VGroup height="100%" width="100%" paddingTop="10" paddingBottom="10">
		<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center" >
			<s:FormItem label="关 键 字">
				<s:TextInput width="200" id="keyinput"/>
			</s:FormItem>
			<s:FormItem label="资源类型">
				<s:DropDownList width="200" itemRenderer="com.hp.idc.components.TreeItemRenderer" id="modelType"/>
			</s:FormItem>
			<s:Button label="搜索资源" click="button1_clickHandler(event)"/>
		</s:HGroup>
		<mx:Spacer height="5" />
		<s:VGroup width="100%" height="100%" gap="0">
			<s:DataGrid width="100%" height="100%" id="resources" doubleClick="resources_dbclickHandler(event)" doubleClickEnabled="true" 
						sortableColumns="true" focusEnabled="false">
				<s:columns>
					<s:ArrayCollection>
						<s:GridColumn headerText="ID" dataField="id"/>
						<s:GridColumn headerText="名称" dataField="name"/>
					</s:ArrayCollection>
				</s:columns>
			</s:DataGrid>
			<widgets:PageController id="pagecontroller" target="{resources}" sortOnServer="true" pageSize="15"/>
		</s:VGroup>
	</s:VGroup>
</s:TitleWindow>
