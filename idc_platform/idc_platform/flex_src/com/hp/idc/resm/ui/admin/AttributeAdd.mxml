<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent  xmlns:fx="http://ns.adobe.com/mxml/2009" 
					 xmlns:s="library://ns.adobe.com/flex/spark" 
					 xmlns:compents="com.hp.idc.compents.*" 
					 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" 
					 xmlns:resm="com.hp.idc.resm.*" 
					 xmlns:admin="com.hp.idc.resm.ui.admin.*"
					 creationComplete="init()" mouseEnabled="true" >
	
	<fx:Script>
		<![CDATA[
			import com.hp.idc.components.PetAlert;
			import com.hp.idc.resm.event.AttributeDefineEvent;
			import com.hp.idc.resm.model.AttributeDefine;
			import com.hp.idc.resm.model.BooleanAttributeDefine;
			import com.hp.idc.resm.model.DateAttributeDefine;
			import com.hp.idc.resm.model.DateTimeAttributeDefine;
			import com.hp.idc.resm.model.ExpressionAttributeDefine;
			import com.hp.idc.resm.model.IntegerAttributeDefine;
			import com.hp.idc.resm.model.NumberAttributeDefine;
			import com.hp.idc.resm.model.ReferenceAttributeDefine;
			import com.hp.idc.resm.model.StringAttributeDefine;
			import com.hp.idc.resm.model.TableAttributeDefine;
			import com.hp.idc.resm.model.TimeAttributeDefine;
			import com.hp.idc.util.UserTool;
			
			import mx.collections.ArrayCollection;
			import mx.events.ListEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			private var gridMenu:ContextMenu = new ContextMenu();
			
			
			private function resultHandler(event:ResultEvent):void
			{
				var attris:ArrayCollection = event.result as ArrayCollection;
				attributes.dataProvider = attris;
			}
			
			private function removeAttrResultHandler(event:ResultEvent):void{
				PetAlert.show("删除成功！");
				attributeService.getAllAttributes(); 
			}
			
			private function resultHandler2(event:FaultEvent):void
			{
				PetAlert.show(event.fault.getStackTrace(),"错误");
			}
			
			public function init():void {
				attributeService.getAllAttributes(); 
				this.addEventListener(AttributeDefineEvent.ATTRIBUTEREFRESH,refreshList);
			}   
			
			private function refreshList(e:AttributeDefineEvent):void{
				attributeService.getAllAttributes(); 
			}
			
			
			protected function edit_ClickHandler(event:MouseEvent):void
			{
			}
			
			private function createGridMenu():void{
				var deleteItem:ContextMenuItem = new ContextMenuItem("删除属性",true);
				gridMenu.customItems.push(deleteItem);
				deleteItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT,deleteAttributeDefine)
				gridMenu.customItems.push(deleteItem);
				attributes.contextMenu = gridMenu;
				gridMenu.hideBuiltInItems();
				
			}
			
			private function deleteAttributeDefine(event:ContextMenuEvent):void{
				var delObject:AttributeDefine = attributes.selectedItem as AttributeDefine;
				attributeUpdateService.removeAttribute(delObject.id,UserTool.userId);
			}
		]]>
		
	</fx:Script>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<mx:RemoteObject  id="attributeService" destination="attributeService">
			<mx:method  name="getAllAttributes" result="resultHandler(event)" fault="resultHandler2(event)"/>
		</mx:RemoteObject>
		<mx:RemoteObject  id="attributeUpdateService" destination="attributeUpdateService">
			<mx:method  name="removeAttribute" result="removeAttrResultHandler(event)" fault="resultHandler2(event)"/>
		</mx:RemoteObject>
	</fx:Declarations>
	
	<s:HGroup left="0" right="0" top="0" bottom="0" width="100%" height="100%">
		<s:VGroup width="100%" height="100%" paddingLeft="20" paddingRight="20" paddingTop="20">
			<s:Label text="已有字段列表" width="100%" styleName="LabelTitle" height="30"/>
			<s:DataGrid width="100%" height="100%" id="attributes" focusEnabled="false">
				<s:columns>
					<s:ArrayCollection>
						<s:GridColumn headerText="ID" dataField="id"/>
						<s:GridColumn headerText="名称" dataField="name"/>
						<s:GridColumn headerText="类型" dataField="type"/>
						<s:GridColumn headerText="参数" dataField="arguments" />
					</s:ArrayCollection>
				</s:columns>
			</s:DataGrid>
		</s:VGroup>
		<admin:AddAttributePage id="addpage" width="300" height="100%" />
	</s:HGroup>
</s:NavigatorContent>
