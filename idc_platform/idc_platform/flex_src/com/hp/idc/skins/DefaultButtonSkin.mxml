<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the Spark Button component.  

       @see spark.components.Button
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:SparkButtonSkin xmlns:fx="http://ns.adobe.com/mxml/2009" 
             xmlns:s="library://ns.adobe.com/flex/spark" 
             xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
             minWidth="73" minHeight="25" 
             alpha.disabled="0.5">
     
    <fx:Metadata>
        <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.Button")]
        ]]>
    </fx:Metadata>
    
    <fx:Script fb:purpose="styling">
        <![CDATA[         
            import spark.components.Group;
            /* Define the skin elements that should not be colorized. 
            For button, the graphics are colorized but the label is not. */
            static private const exclusions:Array = ["labelDisplay"];
            
            /** 
             * @private
             */     
            override public function get colorizeExclusions():Array {return exclusions;}
            
            /**
             * @private
             */
            override protected function initializationComplete():void
            {
                useChromeColor = true;
                super.initializationComplete();
            }  
            
            /**
             *  @private
             */
            override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
            {
                var cr:Number = getStyle("cornerRadius");
                
                if (cornerRadius != cr)
                {
                    cornerRadius = cr;
                   	fill.radiusX = cornerRadius;
                    border.radiusX = cornerRadius;
                }
                
                super.updateDisplayList(unscaledWidth, unscaledHeight);
            }
            
            private var cornerRadius:Number = 2;
                                 
        ]]>        
    </fx:Script>
        
    <!-- states -->
    <s:states>
        <s:State name="up" />
        <s:State name="over" />
        <s:State name="down" />
        <s:State name="disabled" />
    </s:states>
    
  
    <!-- layer 2: fill -->
    <!--- @private -->
	<s:Rect id="fill" left="1" right="1" top="1" bottom="1" radiusX="2" excludeFrom="disabled">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry 
					color="#F2F2F2"
					color.over="0xEAF6FD" 
					color.down="0xE5F4FC" 
					alpha="0.85" />
				<s:GradientEntry 
					color="#CFCFCF"
					color.over="0xA7D9F5" 
					color.down="0x68B3DB" 
					alpha="0.85" />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>

    <!-- layer 7: border - put on top of the fill so it doesn't disappear when scale is less than 1 -->
    <!--- @private -->
	<s:Rect id="borderOver" left="1" right="1" top="1" bottom="1" radiusX="2" excludeFrom="disabled">
		<s:stroke>
			<s:SolidColorStroke color="#FFFFFF" color.over="0xE8F5FC" color.down="0x9EB0BA"/>
		</s:stroke>
	</s:Rect>
	<s:Rect id="border" left="0" right="0" top="0" bottom="0" radiusX="2">
		<s:stroke>
			<s:SolidColorStroke color="#7EADD9" color.over="0x3C7FB1" color.down="0x2C628B" weight="2" weight.down="1"
								weight.over="1"/>
		</s:stroke>
	</s:Rect>

	
    
    <!-- layer 8: text -->
    <!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay  -->
    <s:Label id="labelDisplay"
             textAlign="center"
             maxDisplayedLines="1"
             horizontalCenter="0" verticalCenter="1" verticalAlign="middle"
             left="10" right="10" top="2" bottom="2">
    </s:Label>
    
</s:SparkButtonSkin>